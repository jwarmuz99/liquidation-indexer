type AaveProxy_LiquidationCall {
  id: ID!
  chainId: Int!
  timestamp: BigInt!
  collateralAsset: String!
  debtAsset: String!
  user: String!
  debtToCover: BigInt!
  liquidatedCollateralAmount: BigInt!
  liquidator: String!
  receiveAToken: Boolean!
}

type EVaultDetails {
  id: ID!
  chainId: Int!
  timestamp: BigInt!
  asset: String!
  name: String!
  symbol: String!
  oracle: String!
  unitOfAccount: String!
  decimals: Int!
}

type EulerVaultProxy_Liquidate {
  id: ID!
  chainId: Int!
  timestamp: BigInt!
  liquidator: String!
  violator: String!
  collateral: String!
  repayAssets: BigInt!
  yieldBalance: BigInt!
}

type Morpho_CreateMarket {
  id: ID!
  chainId: Int!
  timestamp: BigInt!
  loanToken: String!
  collateralToken: String!
  oracle: String!
  irm: String!
  lltv: BigInt!
}

type Morpho_Liquidate {
  id: ID!
  chainId: Int!
  timestamp: BigInt!
  id_bytes32: String!
  caller: String!
  borrower: String!
  repaidAssets: BigInt!
  repaidShares: BigInt!
  seizedAssets: BigInt!
  badDebtAssets: BigInt!
  badDebtShares: BigInt!
}

type GeneralizedLiquidation {
  id: ID!
  chainId: Int!
  timestamp: BigInt! @index
  protocol: String!
  borrower: Borrower!
  liquidator: Liquidator!
  txHash: String!
  collateralAsset: String
  debtAsset: String
  repaidAssets: BigInt
  repaidAssetsUSD: Float
  seizedAssets: BigInt
  seizedAssetsUSD: Float
  positionSnapshot_id: ID
}

type LiquidationStats {
  id: ID!
  chainId: Int
  aaveCount: BigInt!
  eulerCount: BigInt!
  morphoCount: BigInt!
  totalCount: BigInt!
}

type Liquidator {
  id: ID!
  liquidator: String!
  chainId: Int
  aaveLiquidations: BigInt!
  eulerLiquidations: BigInt!
  morphoLiquidations: BigInt!
  totalLiquidations: BigInt!
  liquidations: [GeneralizedLiquidation!]! @derivedFrom(field: "liquidator")
  firstLiquidationTimestamp: BigInt
  lastLiquidationTimestamp: BigInt
}

type Borrower {
  id: ID!
  borrower: String!
  chainId: Int
  aaveLiquidations: BigInt!
  eulerLiquidations: BigInt!
  morphoLiquidations: BigInt!
  totalLiquidations: BigInt!
  liquidations: [GeneralizedLiquidation!]! @derivedFrom(field: "borrower")
  firstLiquidationTimestamp: BigInt
  lastLiquidationTimestamp: BigInt
}

type Token {
  id: ID!
  chainId: Int!
  name: String!
  symbol: String!
  decimals: Int!
}

type AaveV3ReserveConfigurationData {
  id: ID!
  chainId: Int!
  decimals: Int
  ltv: BigInt
  cf: BigInt
  liq_inc: BigInt
  reserve_factor: BigInt
}

type PositionSnapshot {
  id: ID!
  chainId: Int!
  timestamp: BigInt! @index
  protocol: String!
  borrower: String! @index
  txHash: String!
  
  # Summary metrics
  totalCollateralUSD: Float!
  totalDebtUSD: Float!
  ltv: Float
  
  # Relationships
  liquidation_id: ID!
  collateralAssets: [PositionCollateral!]! @derivedFrom(field: "positionSnapshot")
  debtAssets: [PositionDebt!]! @derivedFrom(field: "positionSnapshot")
}

type PositionCollateral {
  id: ID!
  
  # Asset details
  asset: String!
  symbol: String!
  decimals: Int!
  
  # Amounts (scaled balances for Aave)
  amount: BigInt!
  amountUSD: Float
  
  # Aave-specific fields
  enabledAsCollateral: Boolean!
  isSeized: Boolean!
  
  # Relationship to parent snapshot
  positionSnapshot: PositionSnapshot!
}

type PositionDebt {
  id: ID!
  
  # Asset details
  asset: String!
  symbol: String!
  decimals: Int!
  
  # Amounts (scaled balances for Aave)
  amount: BigInt!
  amountUSD: Float
  
  # Protocol-specific fields
  isRepaid: Boolean!
  
  # Relationship to parent snapshot
  positionSnapshot: PositionSnapshot!
}
